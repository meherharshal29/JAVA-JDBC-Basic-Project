import java.util.List;import java.util.Scanner;public class StudentView {    public static void main(String[] args) {        try {            StudentView view = new StudentView();            StudentController studentController = new StudentController(view);            Scanner scanner = new Scanner(System.in);            while (true) {                try {                    System.out.println("\n========== Welcome to Student Management =============");                    System.out.println("1 . Add Student");                    System.out.println("2 . View Students");                    System.out.println("3 . Update Student");                    System.out.println("4 . Delete Student");                    System.out.println("5 . Search Student");                    System.out.println("0 . Exit");                    int ch = getIntInput(scanner, "Choice No : ");                    switch (ch) {                        case 1:                            int id = getIntInput(scanner, "Enter Student ID : ");                            System.out.print("Enter Student Name : ");                            String name = scanner.nextLine();                            int age = getIntInput(scanner, "Enter Student Age : ");                            System.out.print("Enter Student Grade : ");                            String grade = scanner.nextLine();                            studentController.addStudent(id, name, age, grade);                            break;                        case 2:                            studentController.displayStudents();                            break;                        case 3:                            int updateId = getIntInput(scanner, "Enter Student ID to Update : ");                            System.out.print("Enter New Name : ");                            String newName = scanner.nextLine();                            int newAge = getIntInput(scanner, "Enter New Age : ");                            System.out.print("Enter New Grade : ");                            String newGrade = scanner.nextLine();                            studentController.updateStudent(updateId, newName, newAge, newGrade);                            break;                        case 4:                            int deleteId = getIntInput(scanner, "Enter Student ID to Delete : ");                            studentController.deleteStudent(deleteId);                            break;                        case 5:                            int searchId = getIntInput(scanner, "Enter Student ID to Search : ");                            studentController.searchStudent(searchId);                            break;                        case 0:                            System.out.println("Closing connection & exiting...");                            studentController.closeConnection();                            scanner.close();                            System.exit(0);                            break;                        default:                            System.out.println("⚠ Invalid Choice! Please enter between 0-5.");                    }                } catch (Exception e) {                    System.out.println("⚠ Unexpected error: " + e.getMessage());                }            }        } catch (Exception e) {            System.out.println("❌ Fatal error: " + e.getMessage());            e.printStackTrace();        }    }    // ✅ Helper method to safely get integer input with retry    private static int getIntInput(Scanner scanner, String message) {        int value;        while (true) {            try {                System.out.print(message);                value = Integer.parseInt(scanner.nextLine());                break;            } catch (NumberFormatException e) {                System.out.println("⚠ Invalid input! Please enter a number.");            }        }        return value;    }    public void showStudents(List<Student> students) {        if (students.isEmpty()) {            System.out.println("⚠ No students found.");            return;        }        System.out.println("\nID | Name | Age | Grade");        System.out.println("--------------------------");        for (Student s : students) {            System.out.println(s.getId() + " | " + s.getName() + " | " + s.getAge() + " | " + s.getGrade());        }    }}